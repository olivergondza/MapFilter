/**
@page	treepattern		TreePattern
<hr>
- @subpage treepatternelements 
- @subpage treepatternexamples

<hr>

	%MapFilter TreePattern (<tt>MapFilter_TreePattern</tt>) consists of
groups of arguments (special kind of such group may be a single argument),
creating tree structure of groups as nodes and arguments as it's leaves.  A
new Pattern can be created from xml file
(<tt>MapFilter_TreePattern::fromFile ( $url );</tt>) or xml in String
(<tt>MapFilter_TreePattern::load ( $xmlString );</tt>).

	During the filtering process algorithm walk through the tree
starting from its root and evaluating all defined argument groups. 
So-called 'satisfaction' of the argument group is determined by its rules
and satisfaction of it's followers.  Single argument is considered
'satisfied' when it's present and when it matches the pattern.  In result
will be found all satisfied arguments from all satisfied groups.  @ref flags
"Flags" will contain all defined flags from satisfied groups and @ref
asserts will contain all defined asserts from adjacent unsatisfied groups.

@section	result		TreePattern Result

	TreePattern currently provides three different types of results.
Result object can be obtained by fetchResult().  Individual results can be
obtained by get<i>MyResultType</i>() (<tt>$filter -> @ref
MapFilter::fetchResult "fetchResult ()" -> @ref MapFilter::getAsserts
"getAsserts ()";</tt>).

	@subsection	results		Results

		Results array can be obtained by <tt>@ref
MapFilter_Pattern_ResultInterface::getResults "getResults ()"</tt>.  Results
array contains filtering result.

	@subsection	flags		Flags

		Flags array can be obtained by <tt>@ref
MapFilter_Pattern_FlagInterface::getFlags "getFlags ()"</tt>.  Flags array
contains filtering flags.

	@subsection	asserts		Asserts

		Asserts array can be obtained by <tt>@ref
MapFilter_Pattern_AssertInterface::getAsserts "getAsserts ()"</tt>.  Asserts
array contains filtering assertions.

<hr>
- @subpage treepatternelements 
- @subpage treepatternexamples
*/